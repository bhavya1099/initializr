/*
 * Copyright 2012-2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// ********RoostGPT********
/*
Test generated by RoostGPT for test java-report-test using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=isInternal_d9ebd497f5
ROOST_METHOD_SIG_HASH=isInternal_6def70f036

"""
  Scenario 1: To validate the 'isInternal' method when 'internal' is set as true.

  Details:
    TestName: testIsInternalSetAsTrue.
    Description: The test is meant to check when the 'isInternal' method is called and 'internal' is set as true.
  Execution:
    Arrange: Create an object of VersionProperty by passing a valid property name and set 'internal' as true.
    Act: Call the 'isInternal' method for the created object.
    Assert: Assert that the returned value is true.
  Validation:
    The assertion aims to verify if the 'isInternal' method returns correctly when 'internal' is set as true. This test ensures the accurate functionality of the 'isInternal' method.


  Scenario 2: To validate the 'isInternal' method when 'internal' is set as false.

  Details:
    TestName: testIsInternalSetAsFalse.
    Description: The test is meant to check when the 'isInternal' method is called and 'internal' is set as false
  Execution:
    Arrange: Create an object of VersionProperty by passing a valid property name and set 'internal' as false.
    Act: Call the 'isInternal' method for the created object.
    Assert: Assert that the returned value is false.
  Validation:
    The assertion aims to verify if the 'isInternal' method returns correctly when 'internal' is set as false. This test ensures the accurate functionality of the 'isInternal' method.


  Scenario 3: To validate the 'isInternal' method respects the instantiated object properties.

  Details:
    TestName: testIsInternalWithDifferentObjectProperties.
    Description: The test is meant to check whether the 'isInternal' method recognizes different object properties by returning the correct 'internal' value.
  Execution:
    Arrange: Create two instances of VersionProperty, set 'internal' as true for one instance and false for the other.
    Act: Call the 'isInternal' method for both created objects.
    Assert: Assert that based on the 'internal' set in the instance, the 'isInternal' method returns correctly for each instance.
  Validation:
    The assertion aims to verify if 'isInternal' method can distinguish between different instantiations of VersionProperty and produce the correct output based on 'internal' value of each instance. This verifies the encapsulation principle of the class.
"""

*/

// ********RoostGPT********

package io.spring.initializr.generator.version;

import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.*;
import java.io.Serializable;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import org.springframework.util.StringUtils;

public class VersionPropertyIsInternalTest {

	@Test
	@Tag("valid")
	public void testIsInternalSetAsTrue() {
		// Arrange
		VersionProperty verPropTrueInternal = VersionProperty.of("test.version", true);
		// Act
		boolean result = verPropTrueInternal.isInternal();
		// Assert
		assertTrue(result);
	}

	@Test
	@Tag("valid")
	public void testIsInternalSetAsFalse() {
		// Arrange
		VersionProperty verPropTrueInternal = VersionProperty.of("test.version", false);
		// Act
		boolean result = verPropTrueInternal.isInternal();
		// Assert
		assertFalse(result);
	}

	@Test
	@Tag("valid")
	public void testIsInternalWithDifferentObjectProperties() {
		// Arrange
		VersionProperty verPropTrueInternal = VersionProperty.of("test.version", true);
		VersionProperty verPropFalseInternal = VersionProperty.of("different.test.version", false);
		// Act
		boolean resultTrueInternal = verPropTrueInternal.isInternal();
		boolean resultFalseInternal = verPropFalseInternal.isInternal();
		// Assert
		assertTrue(resultTrueInternal);
		assertFalse(resultFalseInternal);
	}

}