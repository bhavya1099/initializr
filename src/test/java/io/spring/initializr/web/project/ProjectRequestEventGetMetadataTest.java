/*
 * Copyright 2012-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// ********RoostGPT********
/*
Test generated by RoostGPT for test java-report-test using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=getMetadata_1206d36e1f
ROOST_METHOD_SIG_HASH=getMetadata_204504630d

"""
Scenario 1: Test to verify metadata retrieval when no metadata is set.

Details:
  TestName: testGetMetadataWhenNoMetadataIsSet
  Description: This test scenario aims to check the comportment of the getMetadata method when no metadata has been set prior. This tests the method's handling of null values.
  Execution:
    Arrange: No metadata set, hence no arrangement is required.
    Act: Invoke the getMetadata method.
    Assert: JUnit assertion to compare returned result with null.
  Validation:
    The assertion verifies that the method returns null when no metadata is set. This verifies the correct handling of null values.

Scenario 2: Test to verify metadata retrieval when metadata is set.

Details:
  TestName: testGetMetadataWhenMetadataIsSet
  Description: This test scenario intends to validate if the getMetadata function is accurately fetching the metadata when it has been previously set. This test considers non-null values.
  Execution:
    Arrange: Metadata object (InitializrMetadata type) is set with non-null values.
    Act: Invoke the getMetadata method.
    Assert: Use JUnit assertions to compare returned object (metadata) with the set values.
  Validation:
    The assertion verifies that the method returns the correct metadata when it is set. This confirms that the getMetadata method is functioning as expected and is able to reliably retrieve non-null values.

Scenario 3: Test to verify the immutability of the InitializrMetadata object.

Details:
  TestName: testGetMetadataImmutability
  Description: This scenario aims to test that the getMetadata function cannot modify the InitializrMetadata object once it's set, conserving system integrity.
  Execution:
    Arrange: The InitializrMetadata object is set with certain values.
    Act: Invoke the getMetadata method and try to modify the returned object.
    Assert: Assert that the InitializrMetadata object remains unchanged even after an apparent modification.
  Validation:
    This test is designed to validate the integrity of the ProjectRequestEvent class, by confirming that metadata, once set, isn't subject to unwanted changes. This would ensure both the reliability and the correct functionality of the getMetadata method.

NOTE: While generating test scenarios for the mentioned method, don't forget the importance of naming conventions, documentation and keeping the tests clean and efficient in terms of re-usability.

"""
*/

// ********RoostGPT********

package io.spring.initializr.web.project;

import io.spring.initializr.metadata.InitializrMetadata;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotSame;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.*;

public class ProjectRequestEventGetMetadataTest {

	private ProjectRequest projectRequest;

	private InitializrMetadata initializrMetadata;

	private ProjectRequestEvent projectRequestEvent;

	@BeforeEach
	public void setUp() {
		projectRequest = new ProjectRequest();
		initializrMetadata = new InitializrMetadata();
	}

	@Test
	@Tag("valid")
	public void testGetMetadataWhenNoMetadataIsSet() {
		projectRequestEvent = new ProjectRequestEvent(projectRequest, null);
		assertNull(projectRequestEvent.getMetadata(), "Metadata should be null when not set");
	}

	@Test
	@Tag("valid")
	public void testGetMetadataWhenMetadataIsSet() {
		projectRequestEvent = new ProjectRequestEvent(projectRequest, initializrMetadata);
		assertEquals(initializrMetadata, projectRequestEvent.getMetadata(), "Metadata should match when set");
	}

	@Test
	@Tag("valid")
	public void testGetMetadataImmutability() {
		projectRequestEvent = new ProjectRequestEvent(projectRequest, initializrMetadata);
		InitializrMetadata oldMetadata = projectRequestEvent.getMetadata();

		InitializrMetadata newMetadata = new InitializrMetadata();
		projectRequestEvent.setMetadata(newMetadata);

		assertNotSame(oldMetadata, projectRequestEvent.getMetadata(), "Metadata should be immutable");
	}

}