/*
 * Copyright 2012-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// ********RoostGPT********
/*
Test generated by RoostGPT for test java-report-test using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=getMetadata_1206d36e1f
ROOST_METHOD_SIG_HASH=getMetadata_204504630d

"""
Scenario 1: Test to ensure null value is returned when no metadata is initialized

Details:
  TestName: getNonInitializedMetadata
  Description: The test checks whether it indeed returns null when no metadata object has been set prior.
Execution:
  Arrange: Create a ProjectRequestEvent object.
  Act: Invoke getMetadata() method.
  Assert: Assert that the return value is null.
Validation:
  The assertion verifies that getMetadata method accurately returns the current state of the metadata object, which should be null if it has not been explicitly set. This is to ensure that the application can handle uninitialized objects correctly.


Scenario 2: Test to ensure expected metadata is returned when metadata is initialized

Details:
  TestName: getInitializedMetadata
  Description: The test checks whether the getMetadata method indeed returns the initialized metadata object.
Execution:
  Arrange: Create a ProjectRequestEvent object. Initialize the metadata.
  Act: Invoke getMetadata() method.
  Assert: Assert that the returned metadata matches the initialized metadata.
Validation:
  The assertion verifies that the getMetadata method accurately returns the current state of the metadata object, which should be the initialized object. This is to ensure that the application can correctly track and manage the state of its objects.


Scenario 3: Test to ensure same metadata object is returned always

Details:
  TestName: getMetadataIsSingleton
  Description: The test checks whether the getMetadata method returns the same exact metadata object each time it is called.
Execution:
  Arrange: Create a ProjectRequestEvent object. Initialize the metadata.
  Act: Invoke getMetadata() method twice.
  Assert: Assert that the returned metadata objects in both invocations are the same.
Validation:
  The assertion verifies that the getMetadata method does not create new metadata objects with each invocation, but rather, it returns the same object. This is to ensure that our application behaves and responds consistently across different states.
"""

*/

// ********RoostGPT********

package io.spring.initializr.web.project;

import io.spring.initializr.metadata.InitializrMetadata;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import java.util.List;
import java.util.ArrayList;
import org.junit.jupiter.api.*;

public class ProjectRequestEventGetMetadataTest {

	@Test
	@Tag("invalid")
	public void getNonInitializedMetadata() {

		// Arrange
		ProjectRequest request = new ProjectRequest();
		ProjectRequestEvent event = new ProjectRequestEvent(request, null);
		// Act
		InitializrMetadata actualMetadata = event.getMetadata();
		// Assert
		assertNull(actualMetadata);
	}

	@Test
	@Tag("valid")
	public void getInitializedMetadata() {

		// Arrange
		ProjectRequest request = new ProjectRequest();
		InitializrMetadata expectedMetadata = new InitializrMetadata();
		ProjectRequestEvent event = new ProjectRequestEvent(request, expectedMetadata);
		// Act
		InitializrMetadata actualMetadata = event.getMetadata();
		// Assert
		assertEquals(expectedMetadata, actualMetadata);
	}

	@Test
	@Tag("boundary")
	public void getMetadataIsSingleton() {

		// Arrange
		ProjectRequest request = new ProjectRequest();
		InitializrMetadata expectedMetadata = new InitializrMetadata();
		ProjectRequestEvent event = new ProjectRequestEvent(request, expectedMetadata);
		// Act
		InitializrMetadata firstInstance = event.getMetadata();
		InitializrMetadata secondInstance = event.getMetadata();
		// Assert
		assertEquals(firstInstance, secondInstance);
	}

}