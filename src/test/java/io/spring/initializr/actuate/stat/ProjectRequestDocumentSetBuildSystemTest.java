/*
 * Copyright 2012-2023 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// ********RoostGPT********
/*
Test generated by RoostGPT for test java-report-test using AI Type Azure Open AI and AI Model roostgpt-4-32k

Test generated by RoostGPT for test java-report-test using AI Type Azure Open AI and AI Model roostgpt-4-32k

Test generated by RoostGPT for test java-report-test using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=setBuildSystem_3713dce3d4
ROOST_METHOD_SIG_HASH=setBuildSystem_d31d94e943

"""
Scenario 1: Test if buildSystem is set to a valid string.

TestName: testSetBuildSystemForValidString
Description: This test checks if a valid string value is being correctly set on the buildSystem property.
Execution:
    Arrange: Instantiate a ProjectRequestDocument object and a string representing a buildSystem.
    Act: Call the setBuildSystem() method on the object with the string as input.
    Assert: Use the getBuildSystem() method to retrieve the buildSystem and compare it to the original string.
Validation:
    The getBuildSystem() method should return the same value as the string input to setBuildSystem(). This confirms that the method is correctly setting the value of the variable.

Scenario 2: Test if buildSystem is set to null

TestName: testSetBuildSystemForNullValue
Description: This test checks if a null value is being correctly set on the buildSystem property.
Execution:
    Arrange: Instantiate a ProjectRequestDocument object and set buildSystem value to a string.
    Act: Call the setBuildSystem() method on the object with null as input.
    Assert: Use the getBuildSystem() method to retrieve the buildSystem and compare it to null.
Validation:
    The getBuildSystem() method should return null. This demonstrates that the setBuildSystem() correctly stores null values when they are passed as arguments.

Scenario 3: Test if buildSystem can handle empty strings.

TestName: testSetBuildSystemForEmptyString
Description: This test checks if an empty string value is being correctly set on the buildSystem property.
Execution:
    Arrange: Instantiate a ProjectRequestDocument object.
    Act: Call the setBuildSystem() method on the object with an empty string as input.
    Assert: Use the getBuildSystem() method to retrieve the buildSystem and compare it to an empty string.
Validation:
    The getBuildSystem() method should return an empty string. This demonstrates that the setBuildSystem() method does not reject or convert empty strings, but correctly stores them.

Scenario 4: Test if buildSystem can handle special characters.

TestName: testSetBuildSystemForSpecialCharacters
Description: This test checks if the setBuildSystem() function can handle a string containing special characters.
Execution:
    Arrange: Instantiate a ProjectRequestDocument object and a string containing special characters.
    Act: Call the setBuildSystem() method on the object with the string containing special characters as input.
    Assert: Use the getBuildSystem() method to retrieve the buildSystem and compare it to the original string containing special characters.
Validation:
    The getBuildSystem() should return the string with special characters. This confirms that it correctly stores strings with special characters.
""",
*/

// ********RoostGPT********

package io.spring.initializr.actuate.stat;

import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.StringJoiner;
import io.spring.initializr.generator.version.Version;
import io.spring.initializr.web.support.Agent;
import org.springframework.util.ObjectUtils;
import org.springframework.util.StringUtils;

public class ProjectRequestDocumentSetBuildSystemTest {

	@Test
	@Tag("valid")
	public void testSetBuildSystemForValidString() {
		String buildSystem = "Test Build System";
		ProjectRequestDocument projectRequestDocument = new ProjectRequestDocument();
		projectRequestDocument.setBuildSystem(buildSystem);
		assertEquals(buildSystem, projectRequestDocument.getBuildSystem());
	}

	@Test
	@Tag("invalid")
	public void testSetBuildSystemForNullValue() {
		String buildSystem = "Test Build System";
		ProjectRequestDocument projectRequestDocument = new ProjectRequestDocument();
		projectRequestDocument.setBuildSystem(buildSystem);
		projectRequestDocument.setBuildSystem(null);
		assertNull(projectRequestDocument.getBuildSystem());
	}

	@Test
	@Tag("boundary")
	public void testSetBuildSystemForEmptyString() {
		String buildSystem = "";
		ProjectRequestDocument projectRequestDocument = new ProjectRequestDocument();
		projectRequestDocument.setBuildSystem(buildSystem);
		assertEquals(buildSystem, projectRequestDocument.getBuildSystem());
	}

	@Test
	@Tag("valid")
	public void testSetBuildSystemForSpecialCharacters() {
		String buildSystem = "!@#$%^&*()";
		ProjectRequestDocument projectRequestDocument = new ProjectRequestDocument();
		projectRequestDocument.setBuildSystem(buildSystem);
		assertEquals(buildSystem, projectRequestDocument.getBuildSystem());
	}

}